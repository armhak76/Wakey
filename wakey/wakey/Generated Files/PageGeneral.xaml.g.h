
//------------------------------------------------------------------------------
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//------------------------------------------------------------------------------
#pragma once

#include <unknwn.h>

// Undefine GetCurrentTime macro to prevent
// conflict with Storyboard::GetCurrentTime
#undef GetCurrentTime

#if __has_include(<winrt/Microsoft.UI.Xaml.h>)
#include <winrt/Microsoft.UI.Xaml.h>
#endif
#if __has_include(<winrt/Microsoft.UI.Xaml.Controls.h>)
#include <winrt/Microsoft.UI.Xaml.Controls.h>
#endif
#if __has_include(<winrt/Microsoft.UI.Xaml.Controls.Primitives.h>)
#include <winrt/Microsoft.UI.Xaml.Controls.Primitives.h>
#endif
#if __has_include(<winrt/Microsoft.UI.Xaml.Input.h>)
#include <winrt/Microsoft.UI.Xaml.Input.h>
#endif
#if __has_include(<winrt/Microsoft.UI.Xaml.Markup.h>)
#include <winrt/Microsoft.UI.Xaml.Markup.h>
#endif
#if __has_include(<winrt/Mntone.AngelUmbrella.Controls.h>)
#include <winrt/Mntone.AngelUmbrella.Controls.h>
#endif


namespace winrt::wakey::implementation
{
    using IInspectable = ::winrt::Windows::Foundation::IInspectable;

    template <typename D, typename ... I>
    struct PageGeneralT : public ::winrt::wakey::implementation::PageGeneral_base<D,
        ::winrt::Microsoft::UI::Xaml::Markup::IComponentConnector,
        I...>
    {
        using base_type = typename PageGeneralT::base_type;
        using base_type::base_type;
        using class_type = typename PageGeneralT::class_type;

        void InitializeComponent();
        virtual void Connect(int32_t connectionId, IInspectable const& target);
        virtual ::winrt::Microsoft::UI::Xaml::Markup::IComponentConnector GetBindingConnector(int32_t connectionId, IInspectable const& target);
        void UnloadObject(::winrt::Microsoft::UI::Xaml::DependencyObject const& dependencyObject);
        void DisconnectUnloadedObject(int32_t connectionId);

        ::winrt::Microsoft::UI::Xaml::Controls::TextBlock txtRunAsAdmin()
        {
            return _txtRunAsAdmin;
        }
        void txtRunAsAdmin(::winrt::Microsoft::UI::Xaml::Controls::TextBlock value)
        {
            _txtRunAsAdmin = value;
        }

        ::winrt::Mntone::AngelUmbrella::Controls::SettingsExpander steRunAsAdmin()
        {
            return _steRunAsAdmin;
        }
        void steRunAsAdmin(::winrt::Mntone::AngelUmbrella::Controls::SettingsExpander value)
        {
            _steRunAsAdmin = value;
        }

        ::winrt::Microsoft::UI::Xaml::Controls::ListView listView()
        {
            return _listView;
        }
        void listView(::winrt::Microsoft::UI::Xaml::Controls::ListView value)
        {
            _listView = value;
        }

        ::winrt::Mntone::AngelUmbrella::Controls::SettingsPanel Bluetooth()
        {
            return _Bluetooth;
        }
        void Bluetooth(::winrt::Mntone::AngelUmbrella::Controls::SettingsPanel value)
        {
            _Bluetooth = value;
        }

        ::winrt::Mntone::AngelUmbrella::Controls::SettingsPanel Settings()
        {
            return _Settings;
        }
        void Settings(::winrt::Mntone::AngelUmbrella::Controls::SettingsPanel value)
        {
            _Settings = value;
        }

        ::winrt::Mntone::AngelUmbrella::Controls::SettingsCard stcRunAsAdmin()
        {
            return _stcRunAsAdmin;
        }
        void stcRunAsAdmin(::winrt::Mntone::AngelUmbrella::Controls::SettingsCard value)
        {
            _stcRunAsAdmin = value;
        }

        ::winrt::Mntone::AngelUmbrella::Controls::SettingsCard stcRunAsAdminAlways()
        {
            return _stcRunAsAdminAlways;
        }
        void stcRunAsAdminAlways(::winrt::Mntone::AngelUmbrella::Controls::SettingsCard value)
        {
            _stcRunAsAdminAlways = value;
        }

        ::winrt::Microsoft::UI::Xaml::Controls::FontIcon fntIcoAdminAlways()
        {
            return _fntIcoAdminAlways;
        }
        void fntIcoAdminAlways(::winrt::Microsoft::UI::Xaml::Controls::FontIcon value)
        {
            _fntIcoAdminAlways = value;
        }

        ::winrt::Microsoft::UI::Xaml::Controls::ToggleSwitch tglRunAsAdminAlways()
        {
            return _tglRunAsAdminAlways;
        }
        void tglRunAsAdminAlways(::winrt::Microsoft::UI::Xaml::Controls::ToggleSwitch value)
        {
            _tglRunAsAdminAlways = value;
        }

        ::winrt::Microsoft::UI::Xaml::Controls::FontIcon fntIcoAdmin()
        {
            return _fntIcoAdmin;
        }
        void fntIcoAdmin(::winrt::Microsoft::UI::Xaml::Controls::FontIcon value)
        {
            _fntIcoAdmin = value;
        }

        ::winrt::Microsoft::UI::Xaml::Controls::Button btnRunAsAdmin()
        {
            return _btnRunAsAdmin;
        }
        void btnRunAsAdmin(::winrt::Microsoft::UI::Xaml::Controls::Button value)
        {
            _btnRunAsAdmin = value;
        }

        ::winrt::Microsoft::UI::Xaml::Controls::InfoBar infoBar()
        {
            return _infoBar;
        }
        void infoBar(::winrt::Microsoft::UI::Xaml::Controls::InfoBar value)
        {
            _infoBar = value;
        }

        ::winrt::Microsoft::UI::Xaml::Controls::FontIcon fntIcoTheme()
        {
            return _fntIcoTheme;
        }
        void fntIcoTheme(::winrt::Microsoft::UI::Xaml::Controls::FontIcon value)
        {
            _fntIcoTheme = value;
        }

        ::winrt::Microsoft::UI::Xaml::Controls::ComboBox cboTheme()
        {
            return _cboTheme;
        }
        void cboTheme(::winrt::Microsoft::UI::Xaml::Controls::ComboBox value)
        {
            _cboTheme = value;
        }

        ::winrt::Microsoft::UI::Xaml::Controls::FontIcon fntIcoHotKey()
        {
            return _fntIcoHotKey;
        }
        void fntIcoHotKey(::winrt::Microsoft::UI::Xaml::Controls::FontIcon value)
        {
            _fntIcoHotKey = value;
        }

        ::winrt::Microsoft::UI::Xaml::Controls::TextBox txtHotKey()
        {
            return _txtHotKey;
        }
        void txtHotKey(::winrt::Microsoft::UI::Xaml::Controls::TextBox value)
        {
            _txtHotKey = value;
        }

        ::winrt::Microsoft::UI::Xaml::Controls::FontIcon fntIcoNotifications()
        {
            return _fntIcoNotifications;
        }
        void fntIcoNotifications(::winrt::Microsoft::UI::Xaml::Controls::FontIcon value)
        {
            _fntIcoNotifications = value;
        }

        ::winrt::Microsoft::UI::Xaml::Controls::ToggleSwitch tglNotifications()
        {
            return _tglNotifications;
        }
        void tglNotifications(::winrt::Microsoft::UI::Xaml::Controls::ToggleSwitch value)
        {
            _tglNotifications = value;
        }

        ::winrt::Microsoft::UI::Xaml::Controls::FontIcon fntIcoAutorun()
        {
            return _fntIcoAutorun;
        }
        void fntIcoAutorun(::winrt::Microsoft::UI::Xaml::Controls::FontIcon value)
        {
            _fntIcoAutorun = value;
        }

        ::winrt::Microsoft::UI::Xaml::Controls::ProgressRing prgAutorun()
        {
            return _prgAutorun;
        }
        void prgAutorun(::winrt::Microsoft::UI::Xaml::Controls::ProgressRing value)
        {
            _prgAutorun = value;
        }

        ::winrt::Microsoft::UI::Xaml::Controls::ToggleSwitch tglAutorun()
        {
            return _tglAutorun;
        }
        void tglAutorun(::winrt::Microsoft::UI::Xaml::Controls::ToggleSwitch value)
        {
            _tglAutorun = value;
        }
        
    protected:
        bool _contentLoaded{false};

    private:
        struct PageGeneral_obj1_Bindings;

        ::winrt::Microsoft::UI::Xaml::Controls::TextBlock _txtRunAsAdmin{nullptr};
        ::winrt::Mntone::AngelUmbrella::Controls::SettingsExpander _steRunAsAdmin{nullptr};
        ::winrt::Microsoft::UI::Xaml::Controls::ListView _listView{nullptr};
        ::winrt::Mntone::AngelUmbrella::Controls::SettingsPanel _Bluetooth{nullptr};
        ::winrt::Mntone::AngelUmbrella::Controls::SettingsPanel _Settings{nullptr};
        ::winrt::Mntone::AngelUmbrella::Controls::SettingsCard _stcRunAsAdmin{nullptr};
        ::winrt::Mntone::AngelUmbrella::Controls::SettingsCard _stcRunAsAdminAlways{nullptr};
        ::winrt::Microsoft::UI::Xaml::Controls::FontIcon _fntIcoAdminAlways{nullptr};
        ::winrt::Microsoft::UI::Xaml::Controls::ToggleSwitch _tglRunAsAdminAlways{nullptr};
        ::winrt::Microsoft::UI::Xaml::Controls::FontIcon _fntIcoAdmin{nullptr};
        ::winrt::Microsoft::UI::Xaml::Controls::Button _btnRunAsAdmin{nullptr};
        ::winrt::Microsoft::UI::Xaml::Controls::InfoBar _infoBar{nullptr};
        ::winrt::Microsoft::UI::Xaml::Controls::FontIcon _fntIcoTheme{nullptr};
        ::winrt::Microsoft::UI::Xaml::Controls::ComboBox _cboTheme{nullptr};
        ::winrt::Microsoft::UI::Xaml::Controls::FontIcon _fntIcoHotKey{nullptr};
        ::winrt::Microsoft::UI::Xaml::Controls::TextBox _txtHotKey{nullptr};
        ::winrt::Microsoft::UI::Xaml::Controls::FontIcon _fntIcoNotifications{nullptr};
        ::winrt::Microsoft::UI::Xaml::Controls::ToggleSwitch _tglNotifications{nullptr};
        ::winrt::Microsoft::UI::Xaml::Controls::FontIcon _fntIcoAutorun{nullptr};
        ::winrt::Microsoft::UI::Xaml::Controls::ProgressRing _prgAutorun{nullptr};
        ::winrt::Microsoft::UI::Xaml::Controls::ToggleSwitch _tglAutorun{nullptr};
    };
}

